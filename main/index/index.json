{"schemaVersion":{"major":0,"patch":2,"minor":1},"interfaceLanguages":{"swift":[{"path":"\/documentation","type":"module","title":"Documentation","children":[{"title":"DeviceInput","path":"\/documentation\/deviceinput","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","path":"\/documentation\/deviceinput\/inputdevice","title":"InputDevice","children":[{"type":"groupMarker","title":"Structures"},{"path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct","type":"struct","children":[{"type":"groupMarker","title":"Structures"},{"type":"struct","children":[{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/iterator\/next()","title":"func next() async throws -> InputDevice.Events.Element?"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/iterator\/asynciteratorprotocol-implementations","title":"AsyncIteratorProtocol Implementations","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func next() async throws(Self.Failure) -> Self.Element?","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/iterator\/next()-8sy53","type":"method"},{"title":"func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/iterator\/next(isolation:)","type":"method"}]}],"path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/iterator","title":"InputDevice.Events.Iterator"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/device","title":"let device: InputDevice"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/makeasynciterator()","title":"func makeAsyncIterator() -> InputDevice.Events.AsyncIterator"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/asynciterator","title":"InputDevice.Events.AsyncIterator"},{"type":"typealias","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/element","title":"InputDevice.Events.Element"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"title":"Instance Methods","type":"groupMarker"},{"title":"func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/allsatisfy(_:)"},{"title":"func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/compactmap(_:)-6rr24"},{"title":"func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/compactmap(_:)-7e9i0"},{"title":"func contains(Self.Element) async rethrows -> Bool","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/contains(_:)"},{"title":"func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/contains(where:)"},{"title":"func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/drop(while:)"},{"title":"func dropFirst(Int) -> AsyncDropFirstSequence<Self>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/dropfirst(_:)"},{"title":"func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/filter(_:)"},{"title":"func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/first(where:)"},{"title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/flatmap(_:)-4zht4"},{"title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/flatmap(_:)-82e8k"},{"title":"func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/flatmap(_:)-85x95"},{"title":"func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/flatmap(_:)-8wc5g"},{"title":"func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/map(_:)-15n1n"},{"title":"func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/map(_:)-1fnuv"},{"title":"func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/max(by:)"},{"title":"func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/min(by:)"},{"title":"func prefix(Int) -> AsyncPrefixSequence<Self>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/prefix(_:)"},{"title":"func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/prefix(while:)"},{"title":"func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/reduce(_:_:)"},{"title":"func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result","type":"method","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/reduce(into:_:)"}],"path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/asyncsequence-implementations","title":"AsyncSequence Implementations"},{"type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/!=(_:_:)"}],"path":"\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/equatable-implementations","title":"Equatable Implementations"}],"title":"InputDevice.Events"},{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/deviceinput\/inputdevice\/==(_:_:)","type":"op","title":"static func == (InputDevice, InputDevice) -> Bool"},{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/deviceinput\/inputdevice\/init(eventfile:grabdevice:)","type":"init","title":"init(eventFile: FilePath, grabDevice: Bool)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/deviceinput\/inputdevice\/eventfile","type":"property","title":"let eventFile: FilePath"},{"path":"\/documentation\/deviceinput\/inputdevice\/events-swift.property","type":"property","title":"var events: InputDevice.Events"},{"path":"\/documentation\/deviceinput\/inputdevice\/grabsdevice","type":"property","title":"let grabsDevice: Bool"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/deviceinput\/inputdevice\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","type":"op","path":"\/documentation\/deviceinput\/inputdevice\/!=(_:_:)"}],"title":"Equatable Implementations"}]},{"type":"struct","path":"\/documentation\/deviceinput\/inputevent","title":"InputEvent","children":[{"title":"Structures","type":"groupMarker"},{"children":[{"type":"groupMarker","title":"Initializers"},{"path":"\/documentation\/deviceinput\/inputevent\/code-swift.struct\/init(rawvalue:)","type":"init","title":"init(rawValue: InputEvent.Code.RawValue)"},{"type":"groupMarker","title":"Instance Properties"},{"path":"\/documentation\/deviceinput\/inputevent\/code-swift.struct\/character","type":"property","title":"var character: Character?"},{"path":"\/documentation\/deviceinput\/inputevent\/code-swift.struct\/rawvalue-swift.property","type":"property","title":"let rawValue: InputEvent.Code.RawValue"},{"type":"groupMarker","title":"Type Aliases"},{"path":"\/documentation\/deviceinput\/inputevent\/code-swift.struct\/rawvalue-swift.typealias","type":"typealias","title":"InputEvent.Code.RawValue"},{"type":"groupMarker","title":"Default Implementations"},{"path":"\/documentation\/deviceinput\/inputevent\/code-swift.struct\/equatable-implementations","type":"symbol","children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/deviceinput\/inputevent\/code-swift.struct\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations"},{"path":"\/documentation\/deviceinput\/inputevent\/code-swift.struct\/rawrepresentable-implementations","type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","title":"var hashValue: Int","path":"\/documentation\/deviceinput\/inputevent\/code-swift.struct\/hashvalue"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","title":"func hash(into: inout Hasher)","path":"\/documentation\/deviceinput\/inputevent\/code-swift.struct\/hash(into:)"}],"title":"RawRepresentable Implementations"}],"title":"InputEvent.Code","path":"\/documentation\/deviceinput\/inputevent\/code-swift.struct","type":"struct"},{"children":[{"type":"groupMarker","title":"Initializers"},{"type":"init","path":"\/documentation\/deviceinput\/inputevent\/value-swift.struct\/init(rawvalue:)","title":"init(rawValue: InputEvent.Value.RawValue)"},{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/deviceinput\/inputevent\/value-swift.struct\/rawvalue-swift.property","title":"let rawValue: InputEvent.Value.RawValue"},{"type":"groupMarker","title":"Type Aliases"},{"type":"typealias","path":"\/documentation\/deviceinput\/inputevent\/value-swift.struct\/rawvalue-swift.typealias","title":"InputEvent.Value.RawValue"},{"type":"groupMarker","title":"Type Properties"},{"type":"property","path":"\/documentation\/deviceinput\/inputevent\/value-swift.struct\/autorepeat","title":"static let autoRepeat: InputEvent.Value"},{"type":"property","path":"\/documentation\/deviceinput\/inputevent\/value-swift.struct\/keydown","title":"static let keyDown: InputEvent.Value"},{"type":"property","path":"\/documentation\/deviceinput\/inputevent\/value-swift.struct\/keyup","title":"static let keyUp: InputEvent.Value"},{"type":"groupMarker","title":"Default Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"type":"op","title":"static func != (Self, Self) -> Bool","path":"\/documentation\/deviceinput\/inputevent\/value-swift.struct\/!=(_:_:)"}],"path":"\/documentation\/deviceinput\/inputevent\/value-swift.struct\/equatable-implementations","title":"Equatable Implementations"},{"type":"symbol","children":[{"type":"groupMarker","title":"Instance Properties"},{"type":"property","path":"\/documentation\/deviceinput\/inputevent\/value-swift.struct\/hashvalue","title":"var hashValue: Int"},{"type":"groupMarker","title":"Instance Methods"},{"type":"method","path":"\/documentation\/deviceinput\/inputevent\/value-swift.struct\/hash(into:)","title":"func hash(into: inout Hasher)"}],"path":"\/documentation\/deviceinput\/inputevent\/value-swift.struct\/rawrepresentable-implementations","title":"RawRepresentable Implementations"}],"title":"InputEvent.Value","path":"\/documentation\/deviceinput\/inputevent\/value-swift.struct","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"title":"let code: InputEvent.Code","path":"\/documentation\/deviceinput\/inputevent\/code-swift.property","type":"property"},{"title":"let date: Date","path":"\/documentation\/deviceinput\/inputevent\/date","type":"property"},{"title":"let kind: InputEvent.Kind","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.property","type":"property"},{"title":"let value: InputEvent.Value","path":"\/documentation\/deviceinput\/inputevent\/value-swift.property","type":"property"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"title":"case absoluteAxis","type":"case","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/absoluteaxis"},{"title":"case autoRepeat","type":"case","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/autorepeat"},{"title":"case binarySwitch","type":"case","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/binaryswitch"},{"title":"case forceFeedback","type":"case","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/forcefeedback"},{"title":"case forceFeedbackStatus","type":"case","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/forcefeedbackstatus"},{"title":"case keyStateChange","type":"case","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/keystatechange"},{"title":"case led","type":"case","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/led"},{"title":"case miscellaneous","type":"case","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/miscellaneous"},{"title":"case power","type":"case","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/power"},{"title":"case relativeAxis","type":"case","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/relativeaxis"},{"title":"case sound","type":"case","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/sound"},{"title":"case synchronization","type":"case","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/synchronization"},{"title":"Initializers","type":"groupMarker"},{"title":"init?(rawValue: input_event_type)","type":"init","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/init(rawvalue:)"},{"title":"Default Implementations","type":"groupMarker"},{"title":"Equatable Implementations","type":"symbol","children":[{"type":"groupMarker","title":"Operators"},{"path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/equatable-implementations"},{"title":"RawRepresentable Implementations","type":"symbol","children":[{"title":"Instance Properties","type":"groupMarker"},{"title":"var hashValue: Int","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/hashvalue","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"title":"func hash(into: inout Hasher)","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/hash(into:)","type":"method"}],"path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/rawrepresentable-implementations"}],"title":"InputEvent.Kind","path":"\/documentation\/deviceinput\/inputevent\/kind-swift.enum","type":"enum"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"title":"static func != (Self, Self) -> Bool","path":"\/documentation\/deviceinput\/inputevent\/!=(_:_:)","type":"op"}],"title":"Equatable Implementations","path":"\/documentation\/deviceinput\/inputevent\/equatable-implementations","type":"symbol"}]}],"type":"module"}]}]},"includedArchiveIdentifiers":["DeviceInput"]}