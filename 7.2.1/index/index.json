{
  "includedArchiveIdentifiers" : [
    "DeviceInput"
  ],
  "interfaceLanguages" : {
    "swift" : [
      {
        "children" : [
          {
            "title" : "Structures",
            "type" : "groupMarker"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Structures",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/iterator\/next()",
                        "title" : "func next() async throws -> InputDevice.Events.Element?",
                        "type" : "method"
                      },
                      {
                        "title" : "Default Implementations",
                        "type" : "groupMarker"
                      },
                      {
                        "children" : [
                          {
                            "title" : "Instance Methods",
                            "type" : "groupMarker"
                          },
                          {
                            "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/iterator\/next(isolation:)",
                            "title" : "func next(isolation: isolated (any Actor)?) async throws(Self.Failure) -> Self.Element?",
                            "type" : "method"
                          }
                        ],
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/iterator\/asynciteratorprotocol-implementations",
                        "title" : "AsyncIteratorProtocol Implementations",
                        "type" : "symbol"
                      }
                    ],
                    "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/iterator",
                    "title" : "InputDevice.Events.Iterator",
                    "type" : "struct"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/device",
                    "title" : "let device: InputDevice",
                    "type" : "property"
                  },
                  {
                    "title" : "Instance Methods",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/makeasynciterator()",
                    "title" : "func makeAsyncIterator() -> InputDevice.Events.AsyncIterator",
                    "type" : "method"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/asynciterator",
                    "title" : "InputDevice.Events.AsyncIterator",
                    "type" : "typealias"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/element",
                    "title" : "InputDevice.Events.Element",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/allsatisfy(_:)",
                        "title" : "func allSatisfy((Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/compactmap(_:)-6rr24",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) async throws -> ElementOfResult?) -> AsyncThrowingCompactMapSequence<Self, ElementOfResult>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/compactmap(_:)-7e9i0",
                        "title" : "func compactMap<ElementOfResult>((Self.Element) async -> ElementOfResult?) -> AsyncCompactMapSequence<Self, ElementOfResult>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/contains(_:)",
                        "title" : "func contains(Self.Element) async rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/contains(where:)",
                        "title" : "func contains(where: (Self.Element) async throws -> Bool) async rethrows -> Bool",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/drop(while:)",
                        "title" : "func drop(while: (Self.Element) async -> Bool) -> AsyncDropWhileSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/dropfirst(_:)",
                        "title" : "func dropFirst(Int) -> AsyncDropFirstSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/filter(_:)",
                        "title" : "func filter((Self.Element) async -> Bool) -> AsyncFilterSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/first(where:)",
                        "title" : "func first(where: (Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/flatmap(_:)-4zht4",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/flatmap(_:)-82e8k",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/flatmap(_:)-85x95",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) async -> SegmentOfResult) -> AsyncFlatMapSequence<Self, SegmentOfResult>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/flatmap(_:)-8wc5g",
                        "title" : "func flatMap<SegmentOfResult>((Self.Element) async throws -> SegmentOfResult) -> AsyncThrowingFlatMapSequence<Self, SegmentOfResult>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/map(_:)-15n1n",
                        "title" : "func map<Transformed>((Self.Element) async throws -> Transformed) -> AsyncThrowingMapSequence<Self, Transformed>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/map(_:)-1fnuv",
                        "title" : "func map<Transformed>((Self.Element) async -> Transformed) -> AsyncMapSequence<Self, Transformed>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/max(by:)",
                        "title" : "func max(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/min(by:)",
                        "title" : "func min(by: (Self.Element, Self.Element) async throws -> Bool) async rethrows -> Self.Element?",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/prefix(_:)",
                        "title" : "func prefix(Int) -> AsyncPrefixSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/prefix(while:)",
                        "title" : "func prefix(while: (Self.Element) async -> Bool) rethrows -> AsyncPrefixWhileSequence<Self>",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/reduce(_:_:)",
                        "title" : "func reduce<Result>(Result, (Result, Self.Element) async throws -> Result) async rethrows -> Result",
                        "type" : "method"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/reduce(into:_:)",
                        "title" : "func reduce<Result>(into: Result, (inout Result, Self.Element) async throws -> Void) async rethrows -> Result",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/asyncsequence-implementations",
                    "title" : "AsyncSequence Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.struct",
                "title" : "InputDevice.Events",
                "type" : "struct"
              },
              {
                "title" : "Operators",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/deviceinput\/inputdevice\/==(_:_:)",
                "title" : "static func == (InputDevice, InputDevice) -> Bool",
                "type" : "op"
              },
              {
                "title" : "Initializers",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/deviceinput\/inputdevice\/init(eventfile:grabdevice:)",
                "title" : "init(eventFile: FilePath, grabDevice: Bool)",
                "type" : "init"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/deviceinput\/inputdevice\/eventfile",
                "title" : "let eventFile: FilePath",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/deviceinput\/inputdevice\/events-swift.property",
                "title" : "var events: InputDevice.Events",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/deviceinput\/inputdevice\/grabsdevice",
                "title" : "let grabsDevice: Bool",
                "type" : "property"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputdevice\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/deviceinput\/inputdevice\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/deviceinput\/inputdevice",
            "title" : "InputDevice",
            "type" : "struct"
          },
          {
            "children" : [
              {
                "title" : "Structures",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/code-swift.struct\/init(rawvalue:)",
                    "title" : "init(rawValue: InputEvent.Code.RawValue)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/code-swift.struct\/character",
                    "title" : "var character: Character?",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/code-swift.struct\/rawvalue-swift.property",
                    "title" : "let rawValue: InputEvent.Code.RawValue",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/code-swift.struct\/rawvalue-swift.typealias",
                    "title" : "InputEvent.Code.RawValue",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputevent\/code-swift.struct\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/deviceinput\/inputevent\/code-swift.struct\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputevent\/code-swift.struct\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputevent\/code-swift.struct\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/deviceinput\/inputevent\/code-swift.struct\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/deviceinput\/inputevent\/code-swift.struct",
                "title" : "InputEvent.Code",
                "type" : "struct"
              },
              {
                "children" : [
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.struct\/init(rawvalue:)",
                    "title" : "init(rawValue: InputEvent.Value.RawValue)",
                    "type" : "init"
                  },
                  {
                    "title" : "Instance Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.struct\/rawvalue-swift.property",
                    "title" : "let rawValue: InputEvent.Value.RawValue",
                    "type" : "property"
                  },
                  {
                    "title" : "Type Aliases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.struct\/rawvalue-swift.typealias",
                    "title" : "InputEvent.Value.RawValue",
                    "type" : "typealias"
                  },
                  {
                    "title" : "Type Properties",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.struct\/autorepeat",
                    "title" : "static let autoRepeat: InputEvent.Value",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.struct\/keydown",
                    "title" : "static let keyDown: InputEvent.Value",
                    "type" : "property"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.struct\/keyup",
                    "title" : "static let keyUp: InputEvent.Value",
                    "type" : "property"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.struct\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.struct\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.struct\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.struct\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.struct\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.struct",
                "title" : "InputEvent.Value",
                "type" : "struct"
              },
              {
                "title" : "Instance Properties",
                "type" : "groupMarker"
              },
              {
                "path" : "\/documentation\/deviceinput\/inputevent\/code-swift.property",
                "title" : "let code: InputEvent.Code",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/deviceinput\/inputevent\/date",
                "title" : "let date: Date",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.property",
                "title" : "let kind: InputEvent.Kind",
                "type" : "property"
              },
              {
                "path" : "\/documentation\/deviceinput\/inputevent\/value-swift.property",
                "title" : "let value: InputEvent.Value",
                "type" : "property"
              },
              {
                "title" : "Enumerations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Enumeration Cases",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/absoluteaxis",
                    "title" : "case absoluteAxis",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/autorepeat",
                    "title" : "case autoRepeat",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/binaryswitch",
                    "title" : "case binarySwitch",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/forcefeedback",
                    "title" : "case forceFeedback",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/forcefeedbackstatus",
                    "title" : "case forceFeedbackStatus",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/keystatechange",
                    "title" : "case keyStateChange",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/led",
                    "title" : "case led",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/miscellaneous",
                    "title" : "case miscellaneous",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/power",
                    "title" : "case power",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/relativeaxis",
                    "title" : "case relativeAxis",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/sound",
                    "title" : "case sound",
                    "type" : "case"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/synchronization",
                    "title" : "case synchronization",
                    "type" : "case"
                  },
                  {
                    "title" : "Initializers",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/init(rawvalue:)",
                    "title" : "init?(rawValue: input_event_type)",
                    "type" : "init"
                  },
                  {
                    "title" : "Default Implementations",
                    "type" : "groupMarker"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Operators",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/!=(_:_:)",
                        "title" : "static func != (Self, Self) -> Bool",
                        "type" : "op"
                      }
                    ],
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/equatable-implementations",
                    "title" : "Equatable Implementations",
                    "type" : "symbol"
                  },
                  {
                    "children" : [
                      {
                        "title" : "Instance Properties",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/hashvalue",
                        "title" : "var hashValue: Int",
                        "type" : "property"
                      },
                      {
                        "title" : "Instance Methods",
                        "type" : "groupMarker"
                      },
                      {
                        "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/hash(into:)",
                        "title" : "func hash(into: inout Hasher)",
                        "type" : "method"
                      }
                    ],
                    "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum\/rawrepresentable-implementations",
                    "title" : "RawRepresentable Implementations",
                    "type" : "symbol"
                  }
                ],
                "path" : "\/documentation\/deviceinput\/inputevent\/kind-swift.enum",
                "title" : "InputEvent.Kind",
                "type" : "enum"
              },
              {
                "title" : "Default Implementations",
                "type" : "groupMarker"
              },
              {
                "children" : [
                  {
                    "title" : "Operators",
                    "type" : "groupMarker"
                  },
                  {
                    "path" : "\/documentation\/deviceinput\/inputevent\/!=(_:_:)",
                    "title" : "static func != (Self, Self) -> Bool",
                    "type" : "op"
                  }
                ],
                "path" : "\/documentation\/deviceinput\/inputevent\/equatable-implementations",
                "title" : "Equatable Implementations",
                "type" : "symbol"
              }
            ],
            "path" : "\/documentation\/deviceinput\/inputevent",
            "title" : "InputEvent",
            "type" : "struct"
          }
        ],
        "path" : "\/documentation\/deviceinput",
        "title" : "DeviceInput",
        "type" : "module"
      }
    ]
  },
  "schemaVersion" : {
    "major" : 0,
    "minor" : 1,
    "patch" : 2
  }
}